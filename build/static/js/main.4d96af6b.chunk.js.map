{"version":3,"sources":["components/navbar-component.js","components/excercise-list-component.js","components/edit-excercise-component.js","components/create-excercise-component.js","components/create-user-component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercise","ExercisesList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","state","exercises","_this2","axios","get","then","response","setState","data","catch","error","console","log","id","delete","filter","el","_this3","map","currentexercise","excercise_list_component_Exercise","key","exerciseList","EditExercise","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","length","user","e","target","value","preventDefault","post","res","window","location","ref","required","onChange","type","es","selected","CreateExcercise","CreateUser","Axios","App","navbar_component","react_router","path","exact","component","ExcerciseList","EditExcercise","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d96af6b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Excercise Tracker\n        </Link>\n        <div className=\"collpase navbar-collpase\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                {\" \"}\n                Excercise\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/create\" className=\"nav-link\">\n                {\" \"}\n                Create Excercise\n              </Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/user\" className=\"nav-link\">\n                {\" \"}\n                Create User\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Exercise = props => (\n  <tr>\n    <td>{props.exercise.username}</td>\n    <td>{props.exercise.description}</td>\n    <td>{props.exercise.duration}</td>\n    <td>{props.exercise.date.substring(0, 10)}</td>\n    <td>\n      <Link to={\"/edit/\" + props.exercise._id}>edit</Link> |{\" \"}\n      <a\n        href=\"#\"\n        onClick={() => {\n          props.deleteExercise(props.exercise._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class ExercisesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteExercise = this.deleteExercise.bind(this);\n\n    this.state = { exercises: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/exercises/\")\n      .then(response => {\n        this.setState({ exercises: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  deleteExercise(id) {\n    axios.delete(\"http://localhost:5000/exercises/\" + id).then(response => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      exercises: this.state.exercises.filter(el => el._id !== id)\n    });\n  }\n\n  exerciseList() {\n    return this.state.exercises.map(currentexercise => {\n      return (\n        <Exercise\n          exercise={currentexercise}\n          deleteExercise={this.deleteExercise}\n          key={currentexercise._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Logged Exercises</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Username</th>\n              <th>Description</th>\n              <th>Duration</th>\n              <th>Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.exerciseList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class EditExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/exercises/\" + this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          duration: response.data.duration,\n          date: new Date(response.data.date)\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    axios\n      .get(\"http://localhost:5000/users/\")\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username)\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    };\n\n    console.log(exercise);\n\n    axios\n      .post(\n        \"http://localhost:5000/exercises/update/\" + this.props.match.params.id,\n        exercise\n      )\n      .then(res => console.log(res.data));\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <select\n              ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}\n            >\n              {this.state.users.map(function(user) {\n                return (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Duration (in minutes): </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Edit Exercise Log\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\nclass CreateExcercise extends Component {\n  constructor(props) {\n    super(props);\n    // Defining \"this\"\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    //Setting up the state properties\n    this.state = {\n      username: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: []\n    };\n  }\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/users/\").then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    });\n  }\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n  // Submiting the form on click submit button and navigating back to the homepage\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    };\n    axios\n      .post(\"http://localhost:5000/exercise/add\", exercise)\n      .then(res => console.log(\"Exercise Added\"));\n    console.log(exercise);\n  }\n  render() {\n    return (\n      <div>\n        <h3>Create New Excercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <select\n              className=\"form-control\"\n              ref=\"userInput\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}\n              required\n            >\n              {this.state.users.map(function(user) {\n                return (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Duration (in minutes): </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              {\" \"}\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create Excercise Log\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default CreateExcercise;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    // Defining \"this\"\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    //Setting up the state properties\n    this.state = {\n      username: \"\"\n    };\n  }\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username\n    };\n\n    console.log(user);\n    Axios.post(\"http://localhost:5000/users/add/\", user).then(res =>\n      console.log(res.data)\n    );\n\n    this.setState({\n      username: \"\"\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h3>Create New users</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n\n            <input\n              type=\"text\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}\n              required\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create user\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default CreateUser;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Navbar from \"./components/navbar-component\";\nimport ExcerciseList from \"./components/excercise-list-component\";\nimport EditExcercise from \"./components/edit-excercise-component\";\nimport CreateExcercise from \"./components/create-excercise-component\";\nimport CreateUser from \"./components/create-user-component\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <Route path=\"/\" exact component={ExcerciseList} />\n        <Route path=\"/edit/:id\" exact component={EditExcercise} />\n        <Route path=\"/create\" exact component={CreateExcercise} />\n        <Route path=\"/user\" exact component={CreateUser} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}